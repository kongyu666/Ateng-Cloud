---
# SpringBoot3和JDK21 开启虚拟线程
spring:
  threads:
    virtual:
      enabled: true
---
# 配置文件上传大小限制
spring:
  servlet:
    multipart:
      max-file-size: 2000MB
      max-request-size: 2000MB
---
server:
  # undertow 配置
  undertow:
    # HTTP post内容的最大大小。当值为-1时，默认值为大小是无限的
    max-http-post-size: -1
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分
    buffer-size: 512
    # 是否分配的直接内存
    direct-buffers: true
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
      io: 8
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
      worker: 256
---
# 日志配置
logging.:
  level:
    root: INFO
    com.example: DEBUG
  file:
    name: ./logs/${spring.application.name}.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 7
---
############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: false
---
# Mybatis Flex的配置 https://mybatis-flex.com/zh/base/configuration.html
mybatis-flex:
  global-config:
    print-banner: false
---
# Actuator 监控端点的配置项
management:
  endpoints: # 配置Actuator端点的管理
    web:
      exposure: # 暴露端点
        include: 'health,shutdown'  # 包含所有端点，可以根据需要更改为具体的端点列表
        #include: '*'  # 包含所有端点，可以根据需要更改为具体的端点列表
  endpoint: # 配置各个端点的行为
    shutdown: # 关闭端点配置
      enabled: true # 启用shutdown端点，允许通过POST请求关闭应用程序
    health: # 健康检查端点配置
      #show-details: always # 显示完整的健康信息，包括详细的检查项
      show-details: never # 显示简短的健康信息
---
# 监控配置
spring.boot.admin.client:
  # 增加客户端开关
  enabled: false
  # 设置 Spring Boot Admin Server 地址
  url: http://dev.monitor-admin3.lingo.local/admin
  instance:
    service-host-type: IP
  username: admin
  password: Admin@123
---
# Sa Token 和 Dubbo 集成
sa-token:
  # 打开 RPC 调用鉴权
  check-same-token: true
# 内置配置 不允许修改 如需修改请在 nacos 上写相同配置覆盖
# https://cn.dubbo.apache.org/zh-cn/overview/mannual/java-sdk/reference-manual/registry/nacos/#35-%E6%9B%B4%E5%A4%9A%E9%85%8D%E7%BD%AE
dubbo:
  application:
    # 关闭qos端口避免单机多生产者端口冲突 如需使用自行开启
    qos-enable: false
    logger: slf4j
    # 元数据中心 local 本地 remote 远程 这里使用远程便于其他服务获取
    metadataType: remote
    # 可选值 interface、instance、all，默认是 all，即接口级地址、应用级地址都注册
    register-mode: instance
    service-discovery:
      # FORCE_INTERFACE，只消费接口级地址，如无地址则报错，单订阅 2.x 地址
      # APPLICATION_FIRST，智能决策接口级/应用级地址，双订阅
      # FORCE_APPLICATION，只消费应用级地址，如无地址则报错，单订阅 3.x 地址
      migration: FORCE_APPLICATION
  # 注册中心配置
  registry:
    address: nacos://${spring.cloud.nacos.server-addr}
    group: ${spring.cloud.nacos.discovery.group}
    username: ${spring.cloud.nacos.username}
    password: ${spring.cloud.nacos.password}
    parameters:
      namespace: ${spring.cloud.nacos.discovery.group}
  protocol:
    # 如需使用 Triple 3.0 新协议 可查看官方文档
    # 使用 dubbo 协议通信
    name: dubbo
    # dubbo 协议端口(-1表示自增端口,从20880开始)
    port: -1
  # 消费者相关配置
  consumer:
    # 超时时间
    timeout: 3000
    # 结果缓存(LRU算法)
    # 会有数据不一致问题 建议在注解局部开启
    cache: false
    # 支持校验注解
    validation: jvalidationNew
    # 调用重试 不包括第一次 0为不需要重试
    retries: 3
    # 初始化检查
    check: false
---

